@use "sass:math";

/**
 * Applies preset typeface attributes.
 * @mixin typeface
 * @since 1.0.0
 */
@mixin typeface($font, $size: null, $fill: null, $opts: null) {

	@if $fill and $fill != inherit {
		color: val($fill);
	}

	$weight: 400;

	@if has-typeface-weight($font, "300") or
		has-typeface-weight($font, Light) {
		$weight: 300;
	}

	@if has-typeface-weight($font, "500") or
		has-typeface-weight($font, Medium) {
		$weight: 500;
	}

	@if has-typeface-weight($font, "600") or
		has-typeface-weight($font, Semi) {
		$weight: 600;
	}

	@if has-typeface-weight($font, "700") or
		has-typeface-weight($font, Bold) {
		$weight: 700;
	}

	font-weight: $weight;

	@if has-typeface-option($opts, uppercase) {
		text-transform: uppercase;
	}

	@if has-typeface-option($opts, nowrap) {
		white-space: nowrap;
	}

	@if has-typeface-option($opts, italic) {
		font-style: italic;
	}

	@if has-typeface-option($opts, wrap) {
		line-height: 1;
	}

	/* ---------------------------------------------------------------------- */
	/* Sans                                                                   */
	/* ---------------------------------------------------------------------- */

	@if has-typeface-family($font, Sans) {

		font-family: var(--font-family-sans);

		@if $size != null {

			font-size: rvw(
				$size * 1.05,
				$size,
				xxl,
				lg
			);

		}

		@include media-breakpoint-down(lg) {

			@if $size != null {

				$max: $size;
				$min: $size * 0.95;

				@if $size < 14px {
					$max: $size;
					$min: $size;
				}

				font-size: rvw($max, $min, lg, xs);
			}
		}
	}

	/* ---------------------------------------------------------------------- */
	/* Mono                                                                   */
	/* ---------------------------------------------------------------------- */

	@if has-typeface-family($font, Mono) {

		-webkit-font-smoothing: subpixel-antialiased;
				font-smoothing: subpixel-antialiased;

		font-family: var(--font-family-mono);

		@if $size != null {

			font-size: rvw(
				$size * 1.10,
				$size,
				xxl,
				lg
			);

		}

		@include media-breakpoint-down(lg) {

			@if $size != null {

				$max: $size;
				$min: $size * 0.90;

				@if $min < 15px {
					$min: 15px;
				}

				font-size: rvw($max, $min, lg, xs);
			}
		}
	}
}

/**
* Sets the text antialias;
* @mixin text-antialias
* @since 1.0.0
*/
@mixin text-antialias() {
	-moz-osx-font-smoothing: grayscale;
	 -webkit-font-smoothing: antialiased;
			 font-smoothing: antialiased;
}

/**
* Sets the text adjust.
* @mixin text-adjust
* @since 1.0.0
*/
@mixin text-adjust() {
	-webkit-text-size-adjust: none;
		-moz-text-size-adjust: none;
}

/**
* Convenience mixin to support special writing direction.
* @function text-dir
* @since 1.0.0
*/
@mixin text-dir($dir) {
	@if $dir == ttb { @include text-dir-ttb; }
	@if $dir == btt { @include text-dir-btt; }
}

/**
* Convenience mixin.
* @function text-dir-ttb
* @since 1.0.0
*/
@mixin text-dir-ttb {
	writing-mode: tb;
	writing-mode: vertical-lr;
}

/**
* Convenience mixin.
* @function text-dir-btt
* @since 1.0.0
*/
@mixin text-dir-btt {
	transform: rotate(180deg);
	writing-mode: tb;
	writing-mode: vertical-lr;
}

/**
* Convenience mixin.
* @function text-mask
* @since 1.0.0
*/
@mixin text-mask($background) {

	background: $background;

	/*
	* This must be done this this exact order otherwise it
	* will not work.
	*/

	-webkit-text-fill-color: transparent;
	-webkit-background-clip: text;
}

/**
* Converts tracking to letter-spacing.
* @function tracking
* @since 1.0.0
*/
@function tracking($value) {
	$val: math.div($value, 1000);
	@return #{$val}em;
}

//------------------------------------------------------------------------------
// Private API
//------------------------------------------------------------------------------

/**
* @function has-typeface-family
* @since 1.0.0
* @hidden
*/
@function has-typeface-family($font, $family) {
	@return str-index($font, $family) != null;
}

/**
* @function has-typeface-weight
* @since 1.0.0
* @hidden
*/
@function has-typeface-weight($font, $weight) {
	@return str-index($font, $weight) != null;
}

/**
* @function has-typeface-style
* @since 1.0.0
* @hidden
*/
@function has-typeface-style($font, $style) {
	@return str-index($font, $style) != null;
}

/**
* @function has-typeface-size
* @since 1.0.0
* @hidden
*/
@function has-typeface-size($font, $size) {
	@return to-string($font) == to-string($size);
}

/**
* @function has-typeface-option
* @since 1.0.0
* @hidden
*/
@function has-typeface-option($options, $option) {
	@return $options != null and index($options, $option) != null;
}
